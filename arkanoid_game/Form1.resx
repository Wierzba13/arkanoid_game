<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YCr0QgAAAABJRU5ErkJggg==
</value>
  </data>
</root>